#!/usr/bin/env python

import numpy
import matplotlib.pyplot as plot
import os
import random 

parameters = {
        "a" : [ [ 10.0,  25.0], [ 10.0,  15.0] , "l"],
        "b" : [ [  0.0, 100.0], [ 80.0,  90.0] , "m"],
        "c" : [ [  0.0, 250.0], [100.0, 200.0] , "l"],
        "d" : [ [  0.0, 100.0], [ 25.0,  50.0] , "h"],
        "e" : [ [ 20.0, 100.0], [ 30.0,  50.0] , "h"],
        "f" : [ [  0.0, 100.0], [ 80.0,  90.0] , "l"],
        "g" : [ [  0.0, 100.0], [ 60.0,  70.0] , "l"],
        "h" : [ [  0.0, 250.0], [ 10.0,  50.0] , "l"],
        "i" : [ [  1.0,  10.0], [  1.5,   4.5] , "m"],
        "j" : [ [-50.0,  50.0], [-10.0, -30.0] , "l"]
}

bias = {}

bias["l"] = [
1, 1, 1, 1, 1, 
2, 2, 2, 2, 2, 2, 2, 2, 2,
3, 3, 3, 3, 3,
4, 4, 4, 4,
5, 5, 5, 5,
6, 6, 6,
7, 7,
8,
9,
10
]

bias["m"] = [
1, 
2, 2, 
3, 3, 
4, 4, 4, 4, 
5, 5, 5, 5, 5, 5, 5, 5, 
6, 6, 6,
7, 7,
8,
9,
10
]

bias["h"] = [
1, 1, 1, 
2, 2, 2, 2, 2, 2, 2, 2, 2,
3, 3, 3, 
4,
5,
6,
7, 7,
8, 8, 8, 8, 8,
9, 9, 9, 9, 9, 9, 9, 9, 9,
10, 10, 10
]


def get_biased_value( param ):
    global parameters
    global bias

    biastype = parameters[param][2]
    rbias = random.choice(bias[biastype])
    # print("biastype {}, {}".format(biastype, rbias))

    rmax = round(float(rbias)*0.1, 1)
    rmin = round(float(rbias - 1)*0.1, 1)
    # print("         min, max: {},{}".format(rmin, rmax))

    vrange = parameters[param][0]
    percentage = round(random.uniform(rmin, rmax), 2) 
    value = round(float(vrange[0]) + percentage*(vrange[1]-vrange[0]), 2)
    # print("         value: {}".format(value))
    # print("         percentage: {}".format(percentage))
    # print("         range: {}, {}".format(vrange[0], vrange[1]))

    return value


def generate_parameter_set( params ):
    pset = {} 
    for p in params:
        # print(p)
        chance = random.random()
        if chance < 0.05:
            pset[p] = "" 
            # print("  No value")
        else:
            pset[p] = get_biased_value(p) 

    return pset

def make_image(x, y, name):
    plot.title('Cinema Database Example')
    plot.xlabel('Time')
    plot.ylabel('Amplitude = sin(x)')
    plot.grid(True, which='both')
    # plot.axhline(y=0)
    plot.ylim(top=1.1)
    plot.ylim(bottom=-1.1)
    plot.plot(x, y)
    plot.savefig(name)
    plot.clf()

outdir = "databig.cdb"
os.mkdir(outdir)

with open(os.path.join(outdir, "data.csv"), "w") as data:
    for p in parameters:
        data.write("{},".format(p))
    data.write("FILE\n")

    xvals = numpy.arange(0, 10, 0.1)
    zvals = numpy.arange(0, 1, 0.01) 
 
    cur_image = 1
    for z in zvals: 
        yvals = numpy.sin(xvals)*z
        fname = "plot_{0:03d}.png".format(cur_image)
        make_image(xvals, yvals, os.path.join(outdir, fname ) )
        cur_image += 1

        pset = generate_parameter_set( parameters )
        for p in pset:
            data.write("{},".format(pset[p]))
        data.write("{}\n".format(fname))

